name: geofhir
# Define an explicit network with a simpler setup
networks:
  geofhir_network:
    name: geofhir_network
    driver: bridge

services:
  api:
    container_name: geofhir_api
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/geofhir
      - USE_EXTERNAL_FHIR_SERVER=${USE_EXTERNAL_FHIR_SERVER}
    depends_on:
      - db
    networks:
      - geofhir_network
    restart: unless-stopped

  db:
    container_name: geofhir_db
    image: postgis/postgis:latest
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=geofhir
    ports:
      - "5432:5432"
    networks:
      - geofhir_network
    restart: unless-stopped

  frontend:
    container_name: geofhir_frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    env_file:
      - .env
    environment:
      - NEXT_PUBLIC_GOOGLE_MAPS_API_KEY=${GOOGLE_MAPS_API_KEY}
      # Using Docker service name 'api' to connect to the backend within the network
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      # Permit API server-side to client-side communication
      - NEXT_PUBLIC_FRONTEND_URL=http://localhost:3000
    depends_on:
      - api
    networks:
      - geofhir_network
    restart: unless-stopped

volumes:
  postgres_data:
